import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.b8d6d8db.js";const f=JSON.parse('{"title":"Pino (Logger) Config","description":"","frontmatter":{},"headers":[],"relativePath":"reference/pino-logger-configs.md","filePath":"reference/pino-logger-configs.md"}'),p={name:"reference/pino-logger-configs.md"},l=o(`<h1 id="pino-logger-config" tabindex="-1">Pino (Logger) Config <a class="header-anchor" href="#pino-logger-config" aria-label="Permalink to &quot;Pino (Logger) Config&quot;">â€‹</a></h1><p>Axe API uses <a href="https://getpino.io" target="_blank" rel="noreferrer">pino</a> for logging.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-kX2jP" id="tab-CnhHWQh" checked="checked"><label for="tab-CnhHWQh">app/config.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { IApplicationConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axe-api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IApplicationConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  pino: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    level: </span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    transport: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      target: </span><span style="color:#9ECBFF;">&quot;pino-pretty&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { IApplicationConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axe-api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IApplicationConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  pino: {</span></span>
<span class="line"><span style="color:#24292E;">    level: </span><span style="color:#032F62;">&quot;debug&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    transport: {</span></span>
<span class="line"><span style="color:#24292E;">      target: </span><span style="color:#032F62;">&quot;pino-pretty&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div></div></div><p>All of the database configurations are the same as the original documentation.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://github.com/pinojs/pino-pretty" target="_blank" rel="noreferrer">pino-pretty</a> is a basic prettifier for Pino log lines. You don&#39;t have to use it in your project.</p></div>`,5),e=[l];function t(c,r,i,E,y,g){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{f as __pageData,u as default};
