import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.b8d6d8db.js";const g=JSON.parse('{"title":"Cache Configs","description":"","frontmatter":{},"headers":[],"relativePath":"reference/cache-configs.md","filePath":"reference/cache-configs.md"}'),l={name:"reference/cache-configs.md"},o=e(`<h1 id="cache-configs" tabindex="-1">Cache Configs <a class="header-anchor" href="#cache-configs" aria-label="Permalink to &quot;Cache Configs&quot;">​</a></h1><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-4XUye" id="tab-fMrynm8" checked="checked"><label for="tab-fMrynm8">app/config.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { IApplicationConfig, CacheStrategies } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axe-api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IApplicationConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  cache: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    ttl: </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    invalidation: CacheStrategies.TimeBased,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { IApplicationConfig, CacheStrategies } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axe-api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IApplicationConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">  cache: {</span></span>
<span class="line"><span style="color:#24292E;">    enable: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    ttl: </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    invalidation: CacheStrategies.TimeBased,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>All configurations can be overridden by version, model, and handler-based configurations.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can override only a specific configuration if you wish in version, model, and handler-based configurations.</p></div><h2 id="enable" tabindex="-1"><code>enable</code> <a class="header-anchor" href="#enable" aria-label="Permalink to &quot;\`enable\`&quot;">​</a></h2><p>You can use this configuration to enable or disable the auto-caching across all endpoints.</p><p>The default value is <code>false</code>.</p><h2 id="ttl" tabindex="-1"><code>ttl</code> <a class="header-anchor" href="#ttl" aria-label="Permalink to &quot;\`ttl\`&quot;">​</a></h2><p>The default invalidation time in seconds.</p><h3 id="invalidation" tabindex="-1"><code>invalidation</code> <a class="header-anchor" href="#invalidation" aria-label="Permalink to &quot;\`invalidation\`&quot;">​</a></h3><p>The cache invalidation strategy.</p><p>There are two times cache invalidation strategies that you can use.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CacheStrategies</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">TimeBased</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">TagBased</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CacheStrategies</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">TimeBased</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">TagBased</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h5 id="cachestrategies-timebased" tabindex="-1"><code>CacheStrategies.TimeBased</code> <a class="header-anchor" href="#cachestrategies-timebased" aria-label="Permalink to &quot;\`CacheStrategies.TimeBased\`&quot;">​</a></h5><p>In this cache invalidation strategy, cache values would be invalid after the <code>ttl</code> time automatically.</p><h5 id="cachestrategies-tagbased" tabindex="-1"><code>CacheStrategies.TagBased</code> <a class="header-anchor" href="#cachestrategies-tagbased" aria-label="Permalink to &quot;\`CacheStrategies.TagBased\`&quot;">​</a></h5><p>In this strategy, the cached value would be invalidated both when after <code>ttl</code> time and the cached record is updated or deleted.</p>`,17),p=[o];function t(c,i,r,d,E,y){return a(),n("div",null,p)}const u=s(l,[["render",t]]);export{g as __pageData,u as default};
