import{_ as e,c as i,am as a,o as t}from"./chunks/framework.WY5c5XXN.js";const c=JSON.parse('{"title":"addRequest()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/client-add-request.md","filePath":"reference/client-add-request.md"}'),n={name:"reference/client-add-request.md"};function p(l,s,h,r,d,k){return t(),i("div",null,s[0]||(s[0]=[a(`<h1 id="addrequest" tabindex="-1"><code>addRequest()</code> <a class="header-anchor" href="#addrequest" aria-label="Permalink to &quot;\`addRequest()\`&quot;">â€‹</a></h1><p>You can add an interceptor function to manipulate the HTTP request before sending it.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api, { IRequest } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;axe-api-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api.interceptors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // you manipulate the IRequest object before the sending</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,3)]))}const u=e(n,[["render",p]]);export{c as __pageData,u as default};
