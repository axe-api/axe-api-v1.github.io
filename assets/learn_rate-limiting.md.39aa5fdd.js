import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.18efe07a.js";const h=JSON.parse('{"title":"Rate limiting","description":"","frontmatter":{},"headers":[],"relativePath":"learn/rate-limiting.md","filePath":"learn/rate-limiting.md"}'),l={name:"learn/rate-limiting.md"},p=e(`<h1 id="rate-limiting" tabindex="-1">Rate limiting <a class="header-anchor" href="#rate-limiting" aria-label="Permalink to &quot;Rate limiting&quot;">​</a></h1><p class="description"> Axe API does not provide an internal rate limiter. Nevertheless, we are going to show you an example of how you can add a rate limiter to your application in this section. </p><ul class="intro"><li>You will learn</li><li>What is rate limiting?</li><li>How to add a rate limiter?</li><li>How to store the rate-limiting data?</li></ul><h2 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h2><p><strong>Rate limiting</strong> in REST API refers to the practice of restricting the number of requests a client can make within a specified timeframe. It helps prevent abuse, ensures <strong>fair resource allocation</strong>, and <strong>protects</strong> the API server from <strong>excessive traffic</strong>.</p><p>Rate limits are typically defined as a maximum number of requests per minute, hour, or day. When the limit is exceeded, the server responds with a specific HTTP status code (e.g., <em>429 Too Many Requests</em>), indicating the client has reached the limit.</p><p>Rate limiting can be implemented using various techniques such as token bucket, sliding window, or fixed window algorithms. It promotes API stability, mitigates denial-of-service attacks, and ensures equitable access to resources for all clients while maintaining the overall API performance and availability.</p><p>In this section, we are going to use the <a href="https://www.npmjs.com/package/express-rate-limit" target="_blank" rel="noreferrer">express-rate-limit</a> library as an <a href="https://expressjs.com/en/guide/using-middleware.html" target="_blank" rel="noreferrer">Express Middleware</a>.</p><h2 id="install-dependencies" tabindex="-1">Install dependencies <a class="header-anchor" href="#install-dependencies" aria-label="Permalink to &quot;Install dependencies&quot;">​</a></h2><p>You can use the following commands in the application root folder;</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save express</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rate</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">limit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save express</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">rate</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">limit</span></span></code></pre></div><h2 id="integration-with-axe-api" tabindex="-1">Integration with Axe API <a class="header-anchor" href="#integration-with-axe-api" aria-label="Permalink to &quot;Integration with Axe API&quot;">​</a></h2><p>In the <code>app/v1/init.ts</code> file, you can add the following middleware;</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-tVGcW" id="tab-TmAeqlS" checked="checked"><label for="tab-TmAeqlS">app/v1/init.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Express } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;express&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> RateLimitter </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./Middlewares/RateLimitter&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onBeforeInit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">app</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Express</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  app.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(RateLimitter);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onAfterInit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">app</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Express</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { onBeforeInit, onAfterInit };</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Express } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;express&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> RateLimitter </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./Middlewares/RateLimitter&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onBeforeInit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">app</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Express</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  app.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(RateLimitter);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onAfterInit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">app</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Express</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> { onBeforeInit, onAfterInit };</span></span></code></pre></div></div></div><p>After that, you can create the following file;</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FCvxy" id="tab-uEfeiwN" checked="checked"><label for="tab-uEfeiwN">app/v1/Middlewares/RateLimitter.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> rateLimit </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;express-rate-limit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rateLimit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  windowMs: </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 15 minutes</span></span>
<span class="line"><span style="color:#E1E4E8;">  max: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// limit each IP to 100 requests per windowMs</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> rateLimit </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;express-rate-limit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rateLimit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  windowMs: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 15 minutes</span></span>
<span class="line"><span style="color:#24292E;">  max: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// limit each IP to 100 requests per windowMs</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><h2 id="storing-the-data" tabindex="-1">Storing the data <a class="header-anchor" href="#storing-the-data" aria-label="Permalink to &quot;Storing the data&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/express-rate-limit" target="_blank" rel="noreferrer">express-rate-limit</a> library supports many store providers such as <a href="https://redis.io/" target="_blank" rel="noreferrer">Redis</a>, <a href="https://memcached.org/" target="_blank" rel="noreferrer">Memcached</a>, or <a href="https://www.mongodb.com/" target="_blank" rel="noreferrer">Mongo</a>. You can use any of them easily.</p><p>In the following example, we are going to show how you can add <strong>Redis</strong> support for the rate limiter.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save rate</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">limit</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">redis</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save rate</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">limit</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">redis</span></span></code></pre></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wWHCl" id="tab--_9Vh8r" checked="checked"><label for="tab--_9Vh8r">app/v1/Middlewares/RateLimitter.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> RateLimit </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;express-rate-limit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> RedisStore </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rate-limit-redis&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RateLimit</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  store: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RedisStore</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// see Configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">  }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  max: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// limit each IP to 100 requests per windowMs</span></span>
<span class="line"><span style="color:#E1E4E8;">  delayMs: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// disable delaying - full speed until the max limit is reached</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> RateLimit </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;express-rate-limit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> RedisStore </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rate-limit-redis&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RateLimit</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  store: </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RedisStore</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// see Configuration</span></span>
<span class="line"><span style="color:#24292E;">  }),</span></span>
<span class="line"><span style="color:#24292E;">  max: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// limit each IP to 100 requests per windowMs</span></span>
<span class="line"><span style="color:#24292E;">  delayMs: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// disable delaying - full speed until the max limit is reached</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div></div></div><p>You can review the following store libraries;</p><ul><li><a href="https://www.npmjs.com/package/rate-limit-redis" target="_blank" rel="noreferrer">rate-limit-redis</a></li><li><a href="https://npmjs.org/package/rate-limit-memcached" target="_blank" rel="noreferrer">rate-limit-memcached</a></li><li><a href="https://www.npmjs.com/package/rate-limit-mongo" target="_blank" rel="noreferrer">rate-limit-mongo</a></li></ul><h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">​</a></h2><p>In this section, we tried to simplify how you can add your rate-limiting features to the API.</p><p>In the next section, we are going to show how you can write unit test.</p>`,26),o=[p];function t(r,i,c,y,E,d){return a(),n("div",null,o)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
