import{_ as s,c as n,o as a,Q as o}from"./chunks/framework.ddc2bfae.js";const F=JSON.parse('{"title":"Configurations","description":"","frontmatter":{},"headers":[],"relativePath":"learn/configurations.md","filePath":"learn/configurations.md"}'),l={name:"learn/configurations.md"},p=o(`<h1 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h1><p class="description"> In this section, we are going to explain how you can configure your API in general. You should use the Configuration References docs to get more detailed information. </p><ul class="intro"><li>You will learn</li><li>How to handle configurations?</li><li>How to manage API-based configurations?</li><li>How to manage version-based configurations?</li><li>How to use environment variables?</li></ul><h2 id="fundamentals" tabindex="-1">Fundamentals <a class="header-anchor" href="#fundamentals" aria-label="Permalink to &quot;Fundamentals&quot;">​</a></h2><p>Axe API has different configuration files to manage your API as you expected. All configuration files are written in <strong>TypeScript</strong>.</p><p>A simple configuration file looks like the following example;</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { IApplicationConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axe-api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IApplicationConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  prefix: </span><span style="color:#9ECBFF;">&quot;api&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  env: p<wbr>rocess.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  port: p<wbr>rocess.env.</span><span style="color:#79B8FF;">APP_PORT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">APP_PORT</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  database: {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { IApplicationConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axe-api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IApplicationConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  prefix: </span><span style="color:#032F62;">&quot;api&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  env: p<wbr>rocess.env.</span><span style="color:#005CC5;">NODE_ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  port: p<wbr>rocess.env.</span><span style="color:#005CC5;">APP_PORT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">APP_PORT</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  database: {</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div><p>Axe API has two configuration files in a project at least;</p><ul><li>API configuration (<code>app/config.ts</code>)</li><li>Version-based configuration files (<code>app/v1/config.ts</code>, <code>app/v2/config.ts</code>, etc.)</li></ul><h2 id="general-configuration-file" tabindex="-1">General configuration file <a class="header-anchor" href="#general-configuration-file" aria-label="Permalink to &quot;General configuration file&quot;">​</a></h2><p>There is only <strong>one</strong> configuration file to determine how API works in general.</p><p>In the general configuration file you can manage;</p><ul><li>API prefix</li><li><code>env</code> value to determining the environment</li><li>Running port</li><li><a href="https://getpino.io" target="_blank" rel="noreferrer">pino</a> logger configuration</li><li>Database connection</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You should use the <a href="/reference/api-configs.html">Configuration References</a> docs to get more detailed information.</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-n8o5x" id="tab-Sp7FgOy" checked="checked"><label for="tab-Sp7FgOy">app/config.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { LogLevels, IApplicationConfig } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axe-api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IApplicationConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  prefix: </span><span style="color:#9ECBFF;">&quot;api&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  env: p<wbr>rocess.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  port: p<wbr>rocess.env.</span><span style="color:#79B8FF;">APP_PORT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">APP_PORT</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  pino: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    level: </span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    transport: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      target: </span><span style="color:#9ECBFF;">&quot;pino-pretty&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  rateLimit: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    enabled: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  database: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    client: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_CLIENT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;mysql&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    connection: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      host: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_HOST</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;localhost&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      user: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_USER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;user&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      password: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_PASSWORD</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      database: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_DATABASE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;database&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      port: p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_PORT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.</span><span style="color:#79B8FF;">DB_PORT</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3306</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    pool: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      min: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      max: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    migrations: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      tableName: </span><span style="color:#9ECBFF;">&quot;knex_migrations&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { LogLevels, IApplicationConfig } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axe-api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IApplicationConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  prefix: </span><span style="color:#032F62;">&quot;api&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  env: p<wbr>rocess.env.</span><span style="color:#005CC5;">NODE_ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  port: p<wbr>rocess.env.</span><span style="color:#005CC5;">APP_PORT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">APP_PORT</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  pino: {</span></span>
<span class="line"><span style="color:#24292E;">    level: </span><span style="color:#032F62;">&quot;debug&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    transport: {</span></span>
<span class="line"><span style="color:#24292E;">      target: </span><span style="color:#032F62;">&quot;pino-pretty&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  rateLimit: {</span></span>
<span class="line"><span style="color:#24292E;">    enabled: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  database: {</span></span>
<span class="line"><span style="color:#24292E;">    client: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_CLIENT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;mysql&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    connection: {</span></span>
<span class="line"><span style="color:#24292E;">      host: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_HOST</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;localhost&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      user: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_USER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;user&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      password: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_PASSWORD</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      database: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_DATABASE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;database&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      port: p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_PORT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(p<wbr>rocess.env.</span><span style="color:#005CC5;">DB_PORT</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3306</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    pool: {</span></span>
<span class="line"><span style="color:#24292E;">      min: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      max: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    migrations: {</span></span>
<span class="line"><span style="color:#24292E;">      tableName: </span><span style="color:#032F62;">&quot;knex_migrations&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div></div></div><p>These configuration values are applied to all versions of your API.</p><h2 id="version-based-configurations" tabindex="-1">Version-based configurations <a class="header-anchor" href="#version-based-configurations" aria-label="Permalink to &quot;Version-based configurations&quot;">​</a></h2><p>Axe API allows you to define <strong>version-specific</strong> configurations. Each API version has to have a configuration file.</p><p>In those configuration files, you can manage;</p><ul><li>Database transaction strategy</li><li>Common HTTP response serializer</li><li>i18n configurations</li><li>query limits and defaults</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>You should use the <a href="/reference/api-configs.html">Configuration References</a> docs to get more detailed information.</p></div><p>You can see a simple example of the <em>version-based</em> configuration file;</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3k_pQ" id="tab-m-wbVXz" checked="checked"><label for="tab-m-wbVXz">app/v1/config.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { IVersionConfig, allow, QueryFeature } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;axe-api&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IVersionConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  transaction: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  serializers: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  supportedLanguages: [</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  defaultLanguage: </span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  query: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    limits: [</span><span style="color:#B392F0;">allow</span><span style="color:#E1E4E8;">(QueryFeature.All)],</span></span>
<span class="line"><span style="color:#E1E4E8;">    defaults: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      perPage: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      minPerPage: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      maxPerPage: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> config;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { IVersionConfig, allow, QueryFeature } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;axe-api&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IVersionConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  transaction: [],</span></span>
<span class="line"><span style="color:#24292E;">  serializers: [],</span></span>
<span class="line"><span style="color:#24292E;">  supportedLanguages: [</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  defaultLanguage: </span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  query: {</span></span>
<span class="line"><span style="color:#24292E;">    limits: [</span><span style="color:#6F42C1;">allow</span><span style="color:#24292E;">(QueryFeature.All)],</span></span>
<span class="line"><span style="color:#24292E;">    defaults: {</span></span>
<span class="line"><span style="color:#24292E;">      perPage: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      minPerPage: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      maxPerPage: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> config;</span></span></code></pre></div></div></div><h2 id="using-environment-varibles" tabindex="-1">Using environment varibles <a class="header-anchor" href="#using-environment-varibles" aria-label="Permalink to &quot;Using environment varibles&quot;">​</a></h2><p>Axe API allows using <strong>environment variables</strong>. It uses the <a href="https://www.npmjs.com/package/dotenv" target="_blank" rel="noreferrer">dotenv</a> package under the hood to be able to provide environment variables via <code>.env</code> files.</p><p>In the root directory, you can define a <code>.env</code> file and put your environment variables and secret values in it.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-leQCz" id="tab-oM5kvMw" checked="checked"><label for="tab-oM5kvMw">.env</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">NODE_ENV</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">development</span></span>
<span class="line"><span style="color:#E1E4E8;">APP_PORT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3000</span></span>
<span class="line"><span style="color:#E1E4E8;">DB_CLIENT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">mysql</span></span>
<span class="line"><span style="color:#E1E4E8;">DB_USER</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">DB_PASSWORD</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">my_password</span></span>
<span class="line"><span style="color:#E1E4E8;">DB_DATABASE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">my_db</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">NODE_ENV</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">development</span></span>
<span class="line"><span style="color:#24292E;">APP_PORT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3000</span></span>
<span class="line"><span style="color:#24292E;">DB_CLIENT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">mysql</span></span>
<span class="line"><span style="color:#24292E;">DB_USER</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">DB_PASSWORD</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">my_password</span></span>
<span class="line"><span style="color:#24292E;">DB_DATABASE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">my_db</span></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You should not push the <code>.env</code> file to your Git repository. By default, Axe API projects have a <code>.gitignore</code> file that denies pushing <code>.env</code> files.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you are using <a href="https://www.docker.com" target="_blank" rel="noreferrer">Docker</a>, you can provide the environment variables as described in the Docker documentation.</p></div><h2 id="next-step" tabindex="-1">Next step <a class="header-anchor" href="#next-step" aria-label="Permalink to &quot;Next step&quot;">​</a></h2><p>In this section, we covered how Axe API allows to define configuration in general or version-based.</p><p>In the next section, we are going to talk about internationalization (i18n).</p>`,32),e=[p];function t(c,r,i,E,y,u){return a(),n("div",null,e)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
